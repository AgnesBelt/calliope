#
# NB Parts of this file are automatically parsed and extracted for the configuration reference documentation.
# See `doc/user/configuration_reference.rst` and `doc/generate_tables.py`, which populates
# the `doc/user/includes` directory
#


# default_location:
#     transmission_node: false # true only if no techs are defined (including complete ommission of the `techs` key). Automatically added during processing if not defined by user.
#     coordinates: {x: 0, y: 0}  # The location's x-y coordinates for distance calculations and plotting. Also possible: {lat: ..., lon: ...}
#     available_area: 0  # This location's available land area (required if constraining technology deployment by area).
#     techs: None  # A list of technologies, optionally with location-specific settings overriding the technology's global settings.


# default_link:
#     techs:
#         default:
#             distance: 0
#             constraints:
#                 one_way: false  # FIXME needs description

# List of constraints allowed to specify "file="
file_allowed: ['resource', 'resource_eff', 'parasitic_eff', 'energy_eff', 'storage_loss', 'energy_ramping', 'energy_prod', 'energy_con', 'force_resource', 'om_prod', 'om_con', 'export']

default_location:
    available_area: null
default_tech:
    # FIXME: weight is gone, so no longer needs to be dealt with in objective function
    essentials:
        # FIXME: parent is null by defualt, forcing a check for each tech to define one
        parent: null  # Parent tech_group. Must always be defined
        name: 'Default technology'  # Name of tech, used for plotting and analysis
        # FIXME: x_map no longer exists
        stack_weight: 100  # Used to set the vertical ordering of technologies when plotting system-wide output
        color: false  # Color to use when plotting results. If not defined, a random one will be chosen
        primary_carrier: false  # Selects the primary output carrier to associate with costs & constraints (if multiple primary output carriers are assigned)
        carrier_in: false  # Defaults to false, allows technologies to define primary carrier(s) to consume
        carrier_in_2: false  # Defaults to false, allows technologies to define secondary carrier(s) to consume
        carrier_in_3: false  # Defaults to false, allows technologies to define tertiary carrier(s) to consume
        carrier_out: false  # Defaults to false, allows conversion technologies to define primary carrier(s) to produce
        carrier_out_2: false  # Defaults to false, allows conversion technologies to define secondary carrier(s) to produce
        carrier_out_3: false  # Defaults to false, allows conversion technologies to define tertiary carrier(s) to produce
        # FIXME: carrier_out ratios are now in constraints
    constraints:
        # FIXME: lifetime has changed names and moved into constraints, and is null by default, forcing a check for techs to define it
        lifetime: null  # Lifetime of a plant (years). Must be defined if fixed capital costs are defined. A reasonable value for many technologies is around 20-25 years.
        carrier_ratios: {}  # FIXME this is new and needs a sensible description
        resource: 0  # Maximum available resourceo or reference to a file with time series data
        force_resource: false  # Forces this technology to use all available ``r``, rather than making it a maximum upper boundary (for production) or minimum lower boundary (for consumption)
        resource_unit: power  # Sets the unit of ``r`` to either ``power`` (i.e. kW) or ``energy`` (i.e. kWh), which affects how resource time series are processed when performing time resolution adjustments
        resource_eff: 1.0  # Resource to/from storage conversion efficiency
        resource_area_min: 0  # Minimum installed collector area (m\ :sup:`2`)
        resource_area_max: false  # Maximum installed collector area (m\ :sup:`2`), set to false by default in order to disable this constraint and force r_area to 1
        resource_area_equals: false  # Specific installed collector area (m\ :sup:`2`)
        resource_area_per_energy_cap: false  # If set, forces ``r_area`` to follow ``energy_cap`` with the given numerical ration (e.g. setting to 1.5 means that ``resource_area == 1.5 * energy_cap``)
        resource_cap_min: 0  # Minimum installed resource to/from storage conversion capacity (kW)
        resource_cap_max: .inf  # Maximum installed resource to/from storage conversion capacity (kW)
        resource_cap_equals: false  # Specific installed resource to/from storage conversion capacity (kW)
        resource_cap_equals_energy_cap: false  # If true, r_cap is forced to equal energy_cap
        resource_scale: 1.0  # Scale resource by this value
        resource_scale_to_peak: false  # Scale resource such that its peak is as defined here, ``false`` to disable. This setting only has an effect if a time series is used via ``r: file``
        storage_initial: 0  # Initial storage level (kWh)
        storage_cap_min: 0  # Minimum storage capacity (kWh)
        storage_cap_max: .inf  # Maximum storage capacity (kWh). If both this and s_time.max are set to non-zero values, the minimum resulting constraint of either s_time.max or s_cap.max is applied.
        storage_cap_equals: false  # Specific storage capacity (kWh)
        storage_cap_per_unit: false # set the storage capacity of each integer unit of a technology perchased (kWh/unit)
        charge_rate: false # Charge rate (0 to 1) defining maximum charge/discharge (kW) for a given maximum storage capacity (kWh)
        storage_time_max: 0  # Max storage time (full load hours). If both this and s_cap.max are set to non-zero values, the minimum resulting constraint of either s_time.max or s_cap.max is applied.
        storage_loss: 0  # Storage loss rate (per hour)
        energy_prod: false  # Allow this technology to supply energy to the carrier
        energy_con: false  # Allow this technology to consume energy from the carrier
        parasitic_eff: 1.0  # Plant parasitic efficiency (additional losses as energy gets transferred from the plant to the carrier, e.g. due to plant parasitic consumption)
        energy_eff: 1.0  # Storage to/from carrier conversion efficiency. Can be set to ``file`` or ``file:`` or to a single numerical value
        energy_eff_per_distance: 1.0 # Energy transmission efficiency, per unit distance. Set as value between 1.0 (no loss) and 0 (all energy lost)
        energy_cap_min: 0  # Minimum installed storage to/from carrier conversion capacity (kW), per location
        energy_cap_max: .inf  # Maximum installed storage to/from carrier conversion capacity (kW), per location
        energy_cap_equals: false  # Specific installed storage to/from carrier conversion capacity (kW), per location
        energy_cap_max_systemwide: .inf  # Maximum installed storage to/from carrier conversion capacity (kW), system-wide
        energy_cap_equals_systemwide: false  # Specific installed storage to/from carrier conversion capacity (kW), system-wide
        energy_cap_scale: 1.0  # Scale all ``energy_cap`` min/max/equals/total_max/total_equals constraints by this value
        energy_cap_min_use: false  # Set to a value between 0 and 1 to force minimum storage to carrier capacity use for production technologies
        energy_cap_per_unit: false  # set the capacity of each integer unit of a technology perchased (kW/unit)
        energy_ramping: false  # Ramping rate (fraction of installed capacity per hour), set to ``false`` to disable ramping constraints (only has an effect if the optional ramping constraints are loaded)
        # FIXME: per_distance is no longer in separate top-level thing
        export_cap: .inf  # Maximum allowed export for a technology.
        export_carrier: null  # FIXME needs description
        units_min: false  # Minimum number of integer units of a technology that can be purchased.
        units_max: false  # Maximum number of integer units of a technology that can be purchased.
        units_equals: false  # Specific number of integer units of a technology to be purchased.
    costs:
        default:  # These costs are used for any value not defined for a given cost class
            # FIXME: interest_rate has moved here from its own separate top-level thing
            interest_rate: 0  # Interest rate used when computing levelized costs (fractional, 0.05 means 5%)
            storage_cap: 0  # Cost of storage capacity (per kWh)
            resource_area: 0  # Cost of resource collector area (per m\ :sup:`2`)
            resource_cap: 0  # Cost of resource conversion capacity (per kW)
            energy_cap: 0  # Cost of carrier conversion capacity (per kW gross)
            # FIXME: per_distance is no longer in separate top-level thing
            energy_cap_per_distance: 0  # Cost per unit distance per unit e_cap
            om_annual_investment_fraction: 0  # Yearly O&M costs (fraction of total investment)
            om_annual: 0  # Yearly O&M costs (per kW of ``energy_cap``)
            # FIXME om_fuel is now om_con and will also be applied to techs that consume a carrier
            om_prod: 0  # Fuel costs (per unit of consumption, whether that is a resource or the primary input carrier)
            om_con: 0  # Variable O&M costs (per kWh of ``es_prod``)
            export: 0  # Cost of exporting excess energy (per kWh of ``export``). Usually used in the negative sense, as a subsidy.
            purchase: 0  # Cost for purchasing a technology, triggers a binary variable for that technology to say that it has been purchased
